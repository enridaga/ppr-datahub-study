@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dn: <http://purl.org/datanode/ns/> .

dct:description owl:type owl:AnnotationProperty .
skos:note rdf:type owl:AnnotationProperty .
rdfs:comment rdf:type owl:AnnotationProperty .

dn:about 
	dct:description "<p>A data node may be metadata about another.</p>" ;
	rdfs:comment "A data node is about another data node."@en .
dn:adjacentTo
	dct:description "<p>This property basically represents the proximity of some data to other. Two parts of the same dataset are adjacents each other.</p>"^^rdf:HTML ;
	rdfs:comment "To relate a data node to any of their adjacent data node."@en .
dn:attachedTo 
	dct:description "<p>This, along with its inverse <em>haveAttached</em> , are considered to model the \"physical\" dependency between data. You need to have access to the first in order to access the second, for example. An obvious example is an email and its attachments.</p>"^^rdf:HTML ;
	rdfs:comment "Data are attached to data for some reason"@en .
dn:cleanedInto 
	rdfs:comment "A data node has been cleaned, a new data node is obtained."@en ;
	dct:description "<p>Data are cleaned to better fit a purpose, sometimes making explicit potential capabilities. We intend cleaning in a broad sense, including activities like fixes in the syntax of the data or pruning of unfitting data with relation to a given task.</p>"^^rdf:HTML .
dn:cleanedFrom 
	rdfs:comment "A data node is obtained as the result of a data cleaning activity."@en .
dn:combinationFrom
	rdfs:comment "The subject data node is the result of the combination of a data node with some other."@en ;
	dct:description "<p>This relation specifies the fact that the object includes the subject. However, this does not mean that the subject is included as-is. Therefore, a combination implies derivation but not partition.</p>"^^rdf:HTML.
dn:combinedIn 
	rdfs:comment "A data node that have been combined (with another data node) into a target one."@en .
dn:consistentWith 
	skos:note "<p>It can be the case that a single data node is verified to be consistent (with relation to some logic). It can then be marked to be consistent with itself.</p>" .
dn:consistentWith 
	dct:description "<p>We intend consistency in a general sense: two data nodes are consistent because they agree (ie, they do not disagree...).</p>"^^rdf:HTML ;
	rdfs:comment "A data node that can (should) be used together with another. "@en .
dn:datatypesOf 
	rdfs:comment "Relates a vocabulary of datatypes to the datanode that uses them."@en .
dn:describedBy 
	dct:description "<p>This relates a datanode to any datanode being an object in its representation.</p>" .
dn:describedBy rdfs:comment "Data have other data as description."@en .
dn:describes dct:description "<p>This relates a datanode to any datanode being an object in its representation.</p>" .
dn:describes rdfs:comment "A data node describes another."@en .
dn:descriptorsOf rdfs:comment "This property relates a datanode of descriptors to the datanode that uses them."@en .
dn:differentCapabilityFrom dct:description "<p>Two nodes have different potential. Two data nodes using different vocabularies or two copies of the same data in different places.</p>" .
dn:differentCapabilityFrom skos:note "(Similarly to :overlappingCapabilityWith) This relation is needed to generically express comparison of data nodes with relation to specific tasks."@en .
dn:differentPopulationFrom dct:description "<p>Two datanodes do not share any population.</p>" .
dn:differentVocabularyFrom dct:description "<p>Two datanodes do not share any set of vocabulary terms.</p>" .
dn:disjointPartWith rdfs:comment "Two datanodes are adjacent parts of another. This property relates the two parts without specifying anything about their container. Can be used in conjunction with isPartOf to state that two parts do not overlap."@en .
dn:disjointSectionWith rdfs:comment "Data can be cut in sections according to specific attributes."@en .
dn:hasAddition rdfs:comment "some data is the addition-update of some other"@en .
dn:hasAnnotation rdfs:comment "This relates a datanode to some metadata attached to it."@en .
dn:hasAnonymized dct:description "<p>Relates a datanode to another that is the result of a process that removes any personal identifiable information. The resulting datanode is meant to play the role of its origin in the application.</p>" .
dn:hasAttached rdfs:comment "Data have attached other data for some reason"@en .
dn:hasAttributes dct:description "<p>We relate with this property a data node to a collection of attributes used in it. We distinguish attributes from relations because the first does not qualify the range entity but only the domain entity (saying that a person is 1.82m tall does not change our knowledge about 1.82m).</p>" .
dn:hasAttributes rdfs:comment "Relates data to the attributes used."@en .
dn:hasChange rdfs:comment "some data has some other as a change to come"@en .
dn:hasComputation dct:description "<p>Relates a datanode to another that is the result of some computation on its data.</p>" .
dn:hasDatatypes rdfs:comment "Relates a datanode to the vocabulary of datatypes used in it."@en .
dn:hasDeletion dct:description "<p>Indicates a data node which includes information that is now old or outdated. We don't indicate it to be also a part, this is to discuss.</p>" .
dn:hasDeletion rdfs:comment "A data node is the to-delete-information of some other. In other terms, it is the outdated information."@en .
dn:hasDependency rdfs:comment "A datanode needs another to be used or interpreted."@en .
dn:hasDependency skos:note "The concept of dependency is here considered as to be expressed within the datanode (it is subproperty of references). Is this really a requirement?" .
dn:hasDescriptors dct:description "<p>We choose the term descriptor to indicate generically the element used to bind/map/qualify a value with respect to its entity. Practically, this term maps to <ul><li>\"Field\" in Object Oriented Programming; <li>\"Predicate\" in First Order Logic <li>Column identifier (Attribute) in Relation Database terminology <li>rdf:Property in the Resource Description Framework </ul></p>" .
dn:hasDescriptors rdfs:comment "A descriptor is an element used to qualify a value. Relates a data node to the collection of the descriptors used (being it a data node, obviously)."@en .
dn:hasExtraction dct:description "<p>Relates a datanode to another that formalize the information obtained as a result of an information extraction process, for example a data mining process.</p>" .
dn:hasIdentifiers dct:description "<p>Relates a datanode to the collection of the identifiers of its population.</p>" .
dn:hasInference dct:description "<p>Relates a datanode to another including a set of logical inferences deduced from the first.</p>" .
dn:hasInterpretation rdfs:comment "Some data is interpretated such to produce other data."@en .
dn:hasPart rdfs:comment "To related a data node to another which is contained in it."@en .
dn:hasPortion dct:description ":hasPortion is used to capture the relation with a subset of the data."@en .
dn:hasReification dct:description "<p>This property refer to the semantic of reification in RDF.</p>" .
dn:hasRelations rdfs:comment "Relates a datanode to another enumerating the set of relations used in it."@en .
dn:hasSample dct:description "<p>Relates a datanode to an excerpt of its population, with some, non specified, attributes.</p>" .
dn:hasSection dct:description "An example is the relation between a void:Dataset and a dataset being a specific void:propertyPartition."@en .
dn:hasSection rdfs:comment "Data can be cut in sections according to specific attributes."@en .
dn:hasSelection rdfs:comment "We represent here the outcome of the isolation of a part of a data node for a specific intent."@en .
dn:hasSnapshot rdfs:comment "A copy of a data node in a specific time point"@en .
dn:hasStandIn dct:description "<p>Are we sure a stand-in is always a derivation?</p>" .
dn:hasStandIn rdfs:comment "Some data is a substitute of another, for specific reasons."@en .
dn:hasStatistic rdfs:comment "Computed metadata." .
dn:hasStatistic skos:note "Maybe rename hasStatistics?" .
dn:hasStatistic dct:description "<p>Statistics are at the same time computations and metadata of a source datanode.</p>" .
dn:hasTypes rdfs:comment "Relates a data node to the vocabulary of the types used."@en .
dn:hasUpdate dct:description "<p>Update is considered in a general meaning of having a role meant to better reflect the referred world.</p>" .
dn:hasUpdate rdfs:comment "A data node may be related to another that improves its currency."@en .
dn:hasUpdatedVersion rdfs:comment "A new version of a data node in a specific time point that is meant to substitute it."@en .
dn:hasVocabulary dct:description "<p>The range of this property is a data node which enumerates a set of terms that are all used by the subject data node as identifiers (eventually to name structural elements, like attribute names or types).</p>" .
dn:hasVocabulary rdfs:comment "Relates a data node to a datanode representing a set of names that are all used in it."@en .
dn:hasVocabulary skos:note "<p>When a data node :hasVocabulary another, we expect the latter to be the collection of terms used by the data node to name its properties and types.<br/>How to know if there is some term that is not part of that vocabulary? In other words, is it relevant to know whether a vocabulary is complete or not wrt some data?</p>" .
dn:inconsistentWith dct:description "<p>It can be the case that a single data node is corrupted to some respect. It can then be marked to be inconsistent with itself.</p>" .
dn:inconsistentWith rdfs:comment "A data node that should not be used together with another."@en .
dn:inconsistentWith skos:note "<p>We intend consistency in a general sense: two data nodes are inconsistent because they do not agree.</p>" .
dn:isAnnotationOf rdfs:comment "When an attached datanode is also metadata about what it is attached to... it is an annotation."@en .
dn:isChangeOf rdfs:comment "some data is the coming change of some other"@en .
dn:isDependencyOf rdfs:comment "A datanode is required by another one in order for it to be used or interpreted."@en .
dn:isDerivationOf dct:description "<p>This relation indicates that a data node is the origin of another, in the sense that the second have been produced using the first as information source.</p>" .
dn:isDerivationOf skos:note "This property is not transitive." .
dn:isInterpretationOf rdfs:comment "Some data emerge as the interpretation of other."@en .
dn:isUpdateOf rdfs:comment "A data node that is meant to improve the currency of another."@en .
dn:isVocabularyOf dct:description "<p>This datanode enumerate a set of terms that are all used by the related datanode.</p>" .
dn:linkedBy rdfs:comment "A data node is linked by another using specific tecniques known in the context of Linked Data (like rdfs:seeAlso or owl:sameAs)."@en .
dn:links rdfs:comment "A data node links to other data using specific tecniques known in the context of Linked Data (like rdfs:seeAlso or owl:sameAs)."@en .
dn:links skos:note "It would be interesting to have a taste of other ways of doing similar links in other context then Linked Data."@en .
dn:metadata dct:description "<p>This is used to relate a data node to its metadata.</p>" .
dn:metadata rdfs:comment "A data node has another data node as metadata."@en .
dn:nextVersionOf dct:description "<p>Relates a datanode to another that is the direct next version.</p>" .
dn:optimizedInto rdfs:comment "A datanode have been optimized into a new one, to amplify its functional capabilities."@en .
dn:overlappingCapabilityWith dct:description "<p>Two data nodes have similar potential, their domains overlap.</p>" .
dn:overlappingCapabilityWith skos:note "If the capability is the location, two version might not have the same location. We might want to specify a number of well known capabilities - format, location, meta-model, accessMethod, ... . Might this allow more inferences than the ones we can do now?"@en .
dn:overlappingCapabilityWith skos:note "Similar relations might refer to other features, being it structural (they share schema elements), physical (they are both in XML) or related to the domain (they both talk about Music Artists) - just to make few examples.. We might want to specify other kind of features, covering: ownership (sameOwner), meta-model (sameMetaModel), syntax (sameSyntax), accessMethod (sameAccessMethod), license (compatibleLicense, sameLicense), policies (?)."@en .
dn:overlappingCapabilityWith skos:note "This relation is needed to generically express comparison of data nodes with relation to the domain covered."@en .
dn:overlappingPopulationWith dct:description "<p>Two datanodes share some population.</p>" .
dn:overlappingVocabularyWith dct:description "<p>Two datanodes share a set of vocabulary terms.</p>" .
dn:processedInto rdfs:comment "A data node is processed (transformed) to obtain another one."@en .
dn:refactoredInto dct:description "<p>Refactoring is transforming to make it simpler, optimized and more efficient for a target task.</p>" .
dn:references dct:description "<p>It looks like there could be a more generic property here, which refer to the fact of sharing some signatures (identifiers), without assuming an order or direction of the reference. Two data nodes may simply use the same identifier independently from the intention of making a reference to anything else (then the identifier itself). Does this make sense?</p>" .
dn:references dct:description "<p>The subject of this property includes a mention to something which is (included in) another data node. <br/> Talking about RDF datasets, this refer to the mention of a URI belonging to another dataset. For example, a dataset about employees could mention a Geonames location.</p>" .
dn:relatedWith dct:description "<p>This is the Top Property of Datanode.</p>" .
dn:relatedWith rdfs:comment "A data node is connected to another one."@en .
dn:remodelledFrom dct:description "<p>Remodelling refer to the translation of the data to another symbolic structure (model), while keeping the same interpretation.</p>" .
dn:sameCapabilityAs dct:description "<p>Having the same capability implies having the same population and the same vocabulary. In colloquial terms, the same data is described in the same terms.</p>" .
dn:schemaUsedBy skos:note "Does being a schema imply being a dependency?"@en .
dn:sharesInterpretationWith rdfs:comment "This relates a data node to any datanode that can support its interpretation. They connected nodes might be in the same interpretation model."@en .
dn:typesOf rdfs:comment "Relates the vocabulary of the types used in a datanode to the datanode itself."@en .
dn:usesSchema dct:description "<p>The second is intended to be a self contained model that is (even partly) used in the data node.</p>" .
dn:usesSchema dct:description "<p>We distinguish the schema and the vocabulary as follows. A vocabulary is the enumeration of a set of terms. A schema organize a set of terms in a system of some sort. A list of body parts is not the anatomy of a body. The furniture is not an interior design model.</p>" .
dn:usesSchema rdfs:comment "Relates a data node to another used as schema."@en .
dn:versionOf dct:description "<p>Use this property to represent a temporal relation between two data nodes that are meant to be the same at a different point in time. The property is symmetric and does not specify a direction.<br/>This property is not transitive. While it can be argued that the identity of something tracked temporarly should not change, thus implying transitivity, we want support the case when a data note has more then one following version (branching). Avoiding transitivity allows it.</p>" .

